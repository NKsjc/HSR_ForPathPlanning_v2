#ifndef HICDataHelper_H_H
#define HICDataHelper_H_H

#ifdef HICDLL
	#define HICAPI extern "C" __declspec(dllexport)
#else
	#define HICAPI
#endif

//Device
#define DEV_ROBOT 1

#define DEV_SENSOR 2

//Sensor datatype
#define DATA_SENSORNORMAL 1

#define DEV_CAMERA 3

#define DEV_DEFAULT_VIDEOPACK_SIZE 1036

typedef struct HICDataPack
{
	//1.数据头 2Byte
	short nHeader;

	//2.设备类型 1Byte
	unsigned char nDeviceType;  

	//3.设备名（编号）2Byte
	short nDeviceName;

	//4.数据类型 1Byte
	unsigned char nDataType;

	//5.数据长度 2Byte
	short nDataLength;

	//6.数据内容
	unsigned char *pContent;

	//7.辅助计算用，使用者不需关心该值
	int nContentRealLength;
}HICDataPack;

//////////////////////////////////////////////////////////////////////////
//函数功能：创建一个数据包
//参数：无
//返回值：数据包结构体
//////////////////////////////////////////////////////////////////////////
HICAPI HICDataPack *HICCreatePack();


//////////////////////////////////////////////////////////////////////////
//函数功能：释放一个数据包资源
//参数：需要释放的数据包指针
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICReleasePack(HICDataPack *pPack);


//////////////////////////////////////////////////////////////////////////
//函数功能：设置指定数据包的设备类型
//参数：1.需要被设定的数据包指针 2.设备类型值
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICSetDeviceType(HICDataPack *pPack, unsigned char nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：设置指定数据包的设备名称
//参数：1.需要被设定的数据包指针 2.设备名称值(ID)
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICSetDeviceName(HICDataPack *pPack, short nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：设置指定数据包的数据类型
//参数：1.需要被设定的数据包指针 2.设备类型值
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICSetDataType(HICDataPack *pPack, unsigned char nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个char
//参数：1.需要被设定的数据包指针 2.需要添加的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddChar(HICDataPack *pPack, char nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个short
//参数：1.需要被设定的数据包指针 2.需要添加的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddShort(HICDataPack *pPack, short nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个int
//参数：1.需要被设定的数据包指针 2.需要添加的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddInt(HICDataPack *pPack, int nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个float
//参数：1.需要被设定的数据包指针 2.需要添加的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddFloat(HICDataPack *pPack, float fValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个char数组
//参数：1.需要被设定的数据包指针 2.需要添加的数据指针 3.指定类型数据的长度（不是byte的长度）
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddCharArray(HICDataPack *pPack, char *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个short数组
//参数：1.需要被设定的数据包指针 2.需要添加的数据指针 3.指定类型数据的长度（不是byte的长度）
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddShortArray(HICDataPack *pPack, short *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个int数组
//参数：1.需要被设定的数据包指针 2.需要添加的数据指针 3.指定类型数据的长度（不是byte的长度）
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddIntArray(HICDataPack *pPack, int *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个float数组
//参数：1.需要被设定的数据包指针 2.需要添加的数据指针 3.指定类型数据的长度（不是byte的长度）
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddFloatArray(HICDataPack *pPack, float *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：将指定数据包转换为符合HIC标准的字节流
//参数：1.需要被设定的数据包指针 2.返回转换之后的数据长度（byte长度）
//返回值：被转换的数据字节指针
//////////////////////////////////////////////////////////////////////////
HICAPI unsigned char *HICPackToByte(HICDataPack *pPack, int *nDataLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：Reset数据包内容
//参数：1.需要被设定的数据包指针
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICResetPack(HICDataPack *pPack);


//////////////////////////////////////////////////////////////////////////
//函数功能：创建一个数据包，返回数据包资源ID
//参数：无
//返回值：新建的数据包ID
//////////////////////////////////////////////////////////////////////////
HICAPI unsigned int HICCreatePackS();


//////////////////////////////////////////////////////////////////////////
//函数功能：释放一个数据包的资源
//参数：需要释放的数据包ID
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICReleasePackS(unsigned int nPackID);


//////////////////////////////////////////////////////////////////////////
//函数功能：设置指定数据包的设备类型
//参数：1.需要被设定的数据包ID 2.需要设置的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICSetDeviceTypeS(unsigned int nPackID, unsigned char nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：设置指定数据包的设备名称
//参数：1.需要被设定的数据包ID 2.需要设置的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICSetDeviceNameS(unsigned int nPackID, short nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：设置指定数据包的数据类型
//参数：1.需要被设定的数据包ID 2.需要设置的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICSetDataTypeS(unsigned int nPackID, unsigned char nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数据（char型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddCharS(unsigned int nPackID, char nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数据（short型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddShortS(unsigned int nPackID, short nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数据（int型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddIntS(unsigned int nPackID, int nValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数据（float型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddFloatS(unsigned int nPackID, float fValue);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数组（char型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据 3.数据的长度
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddCharArrayS(unsigned int nPackID, char *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数组（short型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据 3.数据的长度
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddShortArrayS(unsigned int nPackID, short *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数组（int型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据 3.数据的长度
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddIntArrayS(unsigned int nPackID, int *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：向指定数据包添加一个自定义数组（float型）
//参数：1.需要被设定的数据包ID 2.需要设置的数据 3.数据的长度
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICAddFloatArrayS(unsigned int nPackID, float *pValue, int nLength);


//////////////////////////////////////////////////////////////////////////
//函数功能：将指定数据包转换为符合HIC标准的字节流
//参数：1.需要被设定的数据包ID 2.返回转换后的字节数据长度
//返回值：转换后的字节流内容
//////////////////////////////////////////////////////////////////////////
HICAPI unsigned char *HICPackToByteS(unsigned int nPackID, int *nDataLength);

//////////////////////////////////////////////////////////////////////////
//函数功能：Reset数据包
//参数：1.需要被设定的数据包ID
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI void HICResetPackS(unsigned int nPackID);

//////////////////////////////////////////////////////////////////////////
//函数功能：服务器打包的接口（线程安全）
//参数：1.需要转换的数据 2.需要转换的数据长度 3.转换后的数据长度
//返回值：无
//////////////////////////////////////////////////////////////////////////
HICAPI int HICPackServerData(unsigned char *cBuf, unsigned int nLength, unsigned char *cBufOut);

//图像数据缓存包
struct HICVideoPackTemp 
{
	int nPackNum;
	char **m_cVideoTemp;
};

//////////////////////////////////////////////////////////////////////////
//函数功能：打包视频数据的借口
//参数：1.需要转换的数据 2.需要发送的数据长度 3.转换后的包数据 4.需要传递的通道号 5.当前调用接口的线程编号（线程安全相关）
//返回值：总共被打包的数量
//140225 update by YingXin
//////////////////////////////////////////////////////////////////////////
HICAPI HICVideoPackTemp *HICPackPicData(unsigned char *cBuf, int nLength, int nChannel, int nThreadID = 0);

//////////////////////////////////////////////////////////////////////////
//下面数解析数据包的接口
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//函数功能：校验数据包
//参数：1.需要被校验的字节数据 2.被解析的数据长度
//返回值：数据包是否合法
//////////////////////////////////////////////////////////////////////////
HICAPI int HICCheckPack(unsigned char *cData, int nLength);

//注意：下面所有解析相关的接口需要在数据校验后使用，即调用HICCheckPack函数校验过数据之后使用。
//否则无法保证安全性

//////////////////////////////////////////////////////////////////////////
//函数功能：获取被解析数据包的版本号 注
//参数：接收到的字节流
//返回值：数据包版本号
//////////////////////////////////////////////////////////////////////////
HICAPI short HICGetPackVersion(unsigned char *cData);


//////////////////////////////////////////////////////////////////////////
//函数功能：获取上一次被解析的数据包设备类型
//参数：接收到的字节流
//返回值：数据包设备类型
//////////////////////////////////////////////////////////////////////////
HICAPI unsigned char HICGetDeviceType(unsigned char *cData);


//////////////////////////////////////////////////////////////////////////
//函数功能：Reset数据包
//参数：接收到的字节流
//返回值：数据包设备名
//////////////////////////////////////////////////////////////////////////
HICAPI short HICGetDeviceName(unsigned char *cData);


//////////////////////////////////////////////////////////////////////////
//函数功能：Reset数据包
//参数：接收到的字节流
//返回值：数据包数据类型
//////////////////////////////////////////////////////////////////////////
HICAPI unsigned char HICGetDataType(unsigned char *cData);

//////////////////////////////////////////////////////////////////////////
//函数功能：获取数据长度
//参数：接收到的字节流
//返回值：数据长度
//////////////////////////////////////////////////////////////////////////
HICAPI short HICGetDataLength(unsigned char *cData);


//////////////////////////////////////////////////////////////////////////
//函数功能：获取用户数据
//参数：接收到的字节流
//返回值：数据内容
//////////////////////////////////////////////////////////////////////////
HICAPI unsigned char *HICGetData(unsigned char *cData);

//END
//////////////////////////////////////////////////////////////////////////

#endif
